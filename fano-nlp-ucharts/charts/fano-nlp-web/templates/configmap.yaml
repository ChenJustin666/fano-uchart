apiVersion: v1
kind: ConfigMap
metadata:
  name: appintentconfig
  labels:
    {{- include "fanolabs.labels" . | nindent 4 }}
data:
  default.conf: |-
    server {
      listen 8080;
      # listen 8443 ssl;
      # server_name 127.0.0.1;
      # ssl_certificate /etc/nginx/certs/server-cert.pem;
      # ssl_certificate_key /etc/nginx/certs/server-key.pem;

      ssl_session_cache shared:SSL:1m;
      ssl_session_timeout 5m;
      ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
      ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
      ssl_prefer_server_ciphers on;

      client_max_body_size 1024m;
      client_body_buffer_size 10m;
      client_header_buffer_size 10m;
      large_client_header_buffers 4 10240k;

      # intent healthz
      location /app/nlp/healthz {
        return 200;
      }
      
      # intent backend
      location /app/nlp/apis/ {
        proxy_read_timeout 900;
        proxy_pass {{ .Values.configmap.VUE_APP_INTENT_PORTAL_HOST_URL }};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #more_set_headers Access-Control-Allow-Origin *.webflow.io;
        # add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        # add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,X-Requested-With';
        # add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS';
        # add_header X-Frame-Options ALLOWALL;
        add_header X-DNS-Prefetch-Control off;
        add_header Strict-Transport-Security "max-age=15552000; includeSubDomains";
        add_header X-Download-Options noopen;
        add_header X-Content-Type-Options nosniff;
        add_header Content-Security-Policy "font-src 'self' data:";
        add_header X-XSS-Protection "1; mode=block";
        add_header Cache-Control "no-cache";
        add_header Referrer-Policy "strict-origin";
        add_header X-Real-IP $remote_addr;
        add_header X-Forwarded-For $proxy_add_x_forwarded_for;
      }
      
      # nlp backend
      location /app/nlp/nlpApis/ {
        proxy_read_timeout 900;
        proxy_pass {{ .Values.configmap.VUE_APP_NLP_APIS_PORTAL_HOST_URL }};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #more_set_headers Access-Control-Allow-Origin *.webflow.io;
        # add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        # add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,X-Requested-With';
        # add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS';
        # add_header X-Frame-Options ALLOWALL;
        add_header X-DNS-Prefetch-Control off;
        add_header Strict-Transport-Security "max-age=15552000; includeSubDomains";
        add_header X-Download-Options noopen;
        add_header X-Content-Type-Options nosniff;
        add_header Content-Security-Policy "font-src 'self' data:";
        add_header X-XSS-Protection "1; mode=block";
        add_header Cache-Control "no-cache";
        add_header Referrer-Policy "strict-origin";
        add_header X-Real-IP $remote_addr;
        add_header X-Forwarded-For $proxy_add_x_forwarded_for;
      }

      # intent static
      location ~ /app/nlp/static/.+$ {
        root /usr/share/nginx/html;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #more_set_headers Access-Control-Allow-Origin *.webflow.io;
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,X-Requested-With';
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS';
        add_header X-Frame-Options ALLOWALL;
        add_header X-DNS-Prefetch-Control off;
        add_header Strict-Transport-Security "max-age=15552000; includeSubDomains";
        add_header X-Download-Options noopen;
        add_header X-Content-Type-Options nosniff;
        add_header Content-Security-Policy "font-src 'self' data:";
        add_header X-XSS-Protection "1; mode=block";
        add_header Cache-Control "no-cache";
        add_header Referrer-Policy "strict-origin";
      }

      # intent static
      location /app/nlp/static {
          return 404;
      }

      # intent frontend
      location /app/nlp {
        alias /usr/share/nginx/html/app/nlp; 
        index index.html; 
        try_files $uri /index.html last;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #more_set_headers Access-Control-Allow-Origin *.webflow.io;
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,X-Requested-With';
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS';
        add_header X-Frame-Options ALLOWALL;
        add_header X-DNS-Prefetch-Control off;
        add_header Strict-Transport-Security "max-age=15552000; includeSubDomains";
        add_header X-Download-Options noopen;
        add_header X-Content-Type-Options nosniff;
        add_header Content-Security-Policy "font-src 'self' data:";
        add_header X-XSS-Protection "1; mode=block";
        add_header Cache-Control "no-cache";
        add_header Referrer-Policy "strict-origin";
      }
    }
  config.js: |-
    const keycloakUrl = {{ .Values.configmap.VUE_APP_INTENT_PORTAL_KEYCLOAK_URL | quote }};
    const keycloakDefaultRealm = {{ .Values.configmap.VUE_APP_INTENT_PORTAL_KEYCLOAK_DEFAULT_REALM | quote }};
    const keycloakPortalClientId = {{ .Values.configmap.VUE_APP_INTENT_PORTAL_KEYCLOAK_PORTAL_CLIENT_ID | quote }};
    const realmFromHostNameLength = {{ .Values.configmap.VUE_APP_INTENT_PORTAL_REALM_FROM_HOST_NAME_LENGTH }};
    const portalUrl = {{ .Values.configmap.VUE_APP_PORTAL_URL | quote }};
    const intentServerId = {{ .Values.configmap.VUE_APP_INTENT_PORTAL_SERVER_ID | quote  }};
    const keycloakUpdateTokenMinValidity = {{ .Values.configmap.VUE_APP_INTENT_PORTAL_KEYCLOAK_UPDATE_TOKEN_MIN_VALIDITY }};
    const msgDuration = {{ .Values.configmap.VUE_APP_INTENT_PORTAL_MSG_DURATION }};
    const maxUploadSize = {{ .Values.configmap.VUE_APP_INTENT_PORTAL_MAX_UPLOAD_SIZE }};
    const wordCloudDataMinTimes = {{ .Values.configmap.VUE_APP_INTENT_PORTAL_SHOW_WORD_CLOUD_DATA_MIN_COUNT |}};
    const wordCloudDataMaxTimes = {{ .Values.configmap.VUE_APP_INTENT_PORTAL_SHOW_WORD_CLOUD_DATA_MAX_COUNT }};
    const wordCloudDataMinLength = {{ .Values.configmap.VUE_APP_INTENT_PORTAL_SHOW_WORD_CLOUD_DATA_MIN_LENGTH }};
    const wordCloudDataMaxLength = {{ .Values.configmap.VUE_APP_INTENT_PORTAL_SHOW_WORD_CLOUD_DATA_MAX_LENGTH }};
    const wordCloudDataTop = {{ .Values.configmap.VUE_APP_INTENT_PORTAL_SHOW_WORD_CLOUD_DATA_TOP }};
    const clusterAutoRefreshInterval = {{ .Values.configmap.VUE_APP_INTENT_PORTAL_CLUSTER_AUTO_REFRESH_INTERVAL }};
    const addBuiltInEntityRole = 'built-in-entity-add';
    const deleteBuiltInEntityRole = 'built-in-entity-delete';
    const editBuiltInEntityRole = 'built-in-entity-edit';
    const exportBuiltInEntityRole = 'built-in-entity-export';
    const importBuiltInEntityRole = 'built-in-entity-import';
    const publishBuiltInEntityRole = 'built-in-entity-publish';
    const viewBuiltInEntityRole = 'built-in-entity-view';
    const addClusterRole = 'cluster-add';
    const archiveClusterRole = 'cluster-archive';
    const cancelClusterRole = 'cluster-cancel';
    const deleteClusterRole = 'cluster-delete';
    const editClusterRole = 'cluster-edit';
    const viewClusterRole = 'cluster-view';
    const addIntentRole = 'intent-add';
    const deleteIntentRole = 'intent-delete';
    const editIntentRole = 'intent-edit';
    const exportIntentRole = 'intent-export';
    const importIntentRole = 'intent-import';
    const viewIntentRole = 'intent-view';
    const addModelRole = 'model-add';
    const copyModelRole = 'model-copy';
    const deleteModelRole = 'model-delete';
    const editModelRole = 'model-edit';
    const shareModelRole = 'model-share';
    const importModelRole = 'model-import';
    const viewModelRole = 'model-view';
    const addTrainingSetRole = 'trainingset-add';
    const deleteTrainingSetRole = 'trainingset-delete';
    const editTrainingSetRole = 'trainingset-edit';
    const importTrainingSetRole = 'trainingset-import';
    const viewTrainingSetRole = 'trainingset-view';
    const addTrainingTaskRole = 'trainingtask-add';
    const copyTrainingTaskRole = 'trainingtask-copy';
    const downloadTrainingTaskRole = 'trainingtask-download';
    const viewTrainingTaskRole = 'trainingtask-view';
    const viewRegressionTestRole = 'regressiontest-view';
    const ownershipTransferRole = 'ownership-transfer';
    const classifierTypes = ['DistilBERT','QDistilBERT','TinyBERT','BERT-DCL'];