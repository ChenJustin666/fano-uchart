{{- if (include "minio.createSecret" .) }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "common.names.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
type: Opaque
data:
  {{- if eq .Values.gateway.type "azure" }}
  access-key: {{ .Values.gateway.auth.azure.accessKey | toString | b64enc | quote }}
  secret-key: {{ .Values.gateway.auth.azure.secretKey | toString | b64enc | quote }}
  azure-storage-account-name: {{ .Values.gateway.auth.azure.storageAccountName | toString | b64enc | quote }}
  azure-storage-account-key: {{ .Values.gateway.auth.azure.storageAccountKey | toString | b64enc | quote }}
  {{- else if eq .Values.gateway.type "s3" }}
  access-key: {{ .Values.gateway.auth.s3.accessKey | toString | b64enc | quote }}
  secret-key: {{ .Values.gateway.auth.s3.secretKey | toString | b64enc | quote }}
  aws-access-key-id: {{ .Values.gateway.auth.s3.accessKeyId | toString | b64enc | quote }}
  aws-secret-access-key: {{ .Values.gateway.auth.s3.secretAccessKey | toString | b64enc | quote }}
  {{- else if and (eq .Values.gateway.type "gcs") .Values.gateway.auth.gcs.keyJSON | quote }}
  key.json: {{ .Values.gateway.auth.gcs.keyJSON | toString | b64enc | quote }}
  access-key: {{ .Values.gateway.auth.gcs.accessKey | toString | b64enc | quote }}
  secret-key: {{ .Values.gateway.auth.gcs.secretKey | toString | b64enc | quote }}
  {{- end }}
{{- end }}
