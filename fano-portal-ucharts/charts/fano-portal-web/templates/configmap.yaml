apiVersion: v1
kind: ConfigMap
metadata:
  name: appcloudconfig
  labels:
    {{- include "fanolabs.labels" . | nindent 4 }}
data:
  default.conf: |-
    server {
      listen 8080;
      # listen 8443 ssl;
      # server_name 127.0.0.1;
      # ssl_certificate /etc/nginx/certs/server-cert.pem;
      # ssl_certificate_key /etc/nginx/certs/server-key.pem;

      # ssl_session_cache shared:SSL:1m;
      # ssl_session_timeout 5m;
      # ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
      # ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
      # ssl_prefer_server_ciphers on;

      client_max_body_size 1024m;
      client_body_buffer_size 10m;
      client_header_buffer_size 10m;
      large_client_header_buffers 4 10240k;

      # cloud healthz
      location /app/portal/healthz {
        return 200;
      }

      # cloud backend
      location /app/portal/apis/internal/ {
        return 404;
      }

      # cloud backend
      location /app/portal/apis/ {
        proxy_read_timeout 900;
        proxy_pass {{ .Values.configmap.VUE_APP_CLOUD_PORTAL_GATEWAY }};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header X-DNS-Prefetch-Control off;
        add_header Strict-Transport-Security "max-age=15552000; includeSubDomains";
        add_header X-Download-Options noopen;
        add_header X-Content-Type-Options nosniff;
        add_header Content-Security-Policy "script-src 'unsafe-eval' 'unsafe-inline' https://netwatch-uat.fano.ai/; script-src-elem 'unsafe-inline' https://netwatch-uat.fano.ai/; object-src 'unsafe-inline' https://netwatch-uat.fano.ai/; font-src 'self' data:";
        add_header Cache-Control no-store;
        add_header Referrer-Policy "strict-origin";
        add_header X-Real-IP $remote_addr;
        add_header X-Forwarded-For $proxy_add_x_forwarded_for;
      }

      # cloud static
      location ~ /app/portal/static/.+$ {
        root /usr/share/nginx/html;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,X-Requested-With';
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS';
        add_header X-Frame-Options SAMEORIGIN;
        add_header X-DNS-Prefetch-Control off;
        add_header Strict-Transport-Security "max-age=15552000; includeSubDomains";
        add_header X-Download-Options noopen;
        add_header X-Content-Type-Options nosniff;
        add_header Content-Security-Policy "script-src 'unsafe-eval' 'unsafe-inline' https://netwatch-uat.fano.ai/; script-src-elem 'unsafe-inline' https://netwatch-uat.fano.ai/; object-src 'unsafe-inline' https://netwatch-uat.fano.ai/; font-src 'self' data:";
        add_header Cache-Control no-store;
        add_header Referrer-Policy "strict-origin";
      }

      # cloud static
      location /app/portal/static {
          return 404;
      }
      # cloud frontend
      location /app/portal {
        alias /usr/share/nginx/html/app/portal; 
        index index.html; 
        try_files $uri /index.html last;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,X-Requested-With';
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS';
        add_header X-Frame-Options SAMEORIGIN;
        add_header X-DNS-Prefetch-Control off;
        add_header Strict-Transport-Security "max-age=15552000; includeSubDomains";
        add_header X-Download-Options noopen;
        add_header X-Content-Type-Options nosniff;
        add_header Content-Security-Policy "script-src 'unsafe-eval' 'unsafe-inline' https://netwatch-uat.fano.ai/; script-src-elem 'unsafe-inline' https://netwatch-uat.fano.ai/; object-src 'unsafe-inline' https://netwatch-uat.fano.ai/; font-src 'self' data:";
        add_header Cache-Control no-store;
        add_header Referrer-Policy "strict-origin";
      }

      #cloud error
      error_page 403 /app/portal/403.html;
      location = /app/portal/403.html {
        root /usr/share/nginx/html;
      }
      
      error_page 404 /app/portal/404.html;
      location = /app/portal/404.html {
        root /usr/share/nginx/html;
      }
    }
  config.js: |-
    const keycloakUrl = {{ .Values.configmap.VUE_APP_CLOUD_PORTAL_KEYCLOAK_URL | quote }};
    const keycloakDefaultRealm = {{ .Values.configmap.VUE_APP_CLOUD_PORTAL_KEYCLOAK_DEFAULT_REALM | quote }};
    const keycloakPortalClientId = {{ .Values.configmap.VUE_APP_CLOUD_PORTAL_KEYCLOAK_PORTAL_CLIENT_ID | quote }};
    const realmFromHostNameLength = {{ .Values.configmap.VUE_APP_CLOUD_PORTAL_REALM_FROM_HOST_NAME_LENGTH }};
    const portalServerId = {{ .Values.configmap.VUE_APP_CLOUD_PORTAL_SERVER_ID | quote  }};
    const keycloakUpdateTokenMinValidity = {{ .Values.configmap.VUE_APP_CLOUD_PORTAL_KEYCLOAK_UPDATE_TOKEN_MIN_VALIDITY }};
    const msgDuration = {{ .Values.configmap.VUE_APP_CLOUD_PORTAL_MSG_DURATION }};
    const tenantAdminRole = {{ .Values.configmap.VUE_APP_CLOUD_PORTAL_KEYCLOAK_TENANT_ADMIN_ROLE | quote }};
    const superUserRole = {{ .Values.configmap.VUE_APP_CLOUD_PORTAL_KEYCLOAK_SUPER_USER_ROLE | quote }};
    const endUserRole = {{ .Values.configmap.VUE_APP_CLOUD_PORTAL_KEYCLOAK_END_USER_ROLE | quote }};
    const viewEventLogRole = 'event-log-view';
    const openAgentAssistPre = {{ .Values.configmap.VUE_APP_CLOUD_PORTAL_OPEN_AGENT_ASSIST_PRE | quote }};
    const closeAgentAssistMsg = {{ .Values.configmap.VUE_APP_CLOUD_PORTAL_CLOSE_AGENT_ASSIST_MSG | quote }};